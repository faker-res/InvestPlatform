<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="la.niub.abcapi.invest.platform.dao.invest.IInvestnewAccessDao">
    <resultMap id="BaseResultMap" type="la.niub.abcapi.invest.platform.model.invest.InvestnewAccessModel">
        <constructor>
            <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
            <arg column="access_id" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="company_id" javaType="java.lang.Long" jdbcType="BIGINT" />
            <arg column="parent_id" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, access_id, company_id, parent_id, name, description
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from investnew_access
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from investnew_access
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="la.niub.abcapi.invest.platform.model.invest.InvestnewAccessModel">
    insert into investnew_access (id, access_id, company_id,
      parent_id, name, description
      )
    values (#{id,jdbcType=INTEGER}, #{access_id,jdbcType=VARCHAR}, #{company_id,jdbcType=BIGINT},
      #{parent_id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="la.niub.abcapi.invest.platform.model.invest.InvestnewAccessModel">
        insert into investnew_access
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="access_id != null">
                access_id,
            </if>
            <if test="company_id != null">
                company_id,
            </if>
            <if test="parent_id != null">
                parent_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="access_id != null">
                #{access_id,jdbcType=VARCHAR},
            </if>
            <if test="company_id != null">
                #{company_id,jdbcType=BIGINT},
            </if>
            <if test="parent_id != null">
                #{parent_id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="la.niub.abcapi.invest.platform.model.invest.InvestnewAccessModel">
        update investnew_access
        <set>
            <if test="access_id != null">
                access_id = #{access_id,jdbcType=VARCHAR},
            </if>
            <if test="company_id != null">
                company_id = #{company_id,jdbcType=BIGINT},
            </if>
            <if test="parent_id != null">
                parent_id = #{parent_id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="la.niub.abcapi.invest.platform.model.invest.InvestnewAccessModel">
    update investnew_access
    set access_id = #{access_id,jdbcType=VARCHAR},
      company_id = #{company_id,jdbcType=BIGINT},
      parent_id = #{parent_id,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <insert id="insertMulti" parameterType="list" >
        insert into investnew_access
        (access_id, company_id, parent_id, name, description)
        values
        <foreach collection="records" item="item" index="index"
                 open="" separator="," close="">
            (#{item.access_id,jdbcType=VARCHAR}, #{item.company_id,jdbcType=BIGINT}, #{item.parent_id,jdbcType=VARCHAR},
            #{item.name,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR})
        </foreach>
        ON DUPLICATE KEY UPDATE
        parent_id=VALUES(parent_id),name=VALUES(name),description=VALUES(description)
    </insert>
    <select id="selectByCompanyId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from investnew_access
        where company_id = #{companyId,jdbcType=BIGINT}
        order by id asc
    </select>
    <select id="selectByAccessIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from investnew_access
        where company_id = #{companyId,jdbcType=BIGINT}
        and access_id in
        <foreach collection="accessIds" index="index" item="item" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        order by id asc
    </select>
    <delete id="deleteByCompanyId">
    delete from investnew_access
    where company_id = #{companyId,jdbcType=BIGINT}
  </delete>
</mapper>