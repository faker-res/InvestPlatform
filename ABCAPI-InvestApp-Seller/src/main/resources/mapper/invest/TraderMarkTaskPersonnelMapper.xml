<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="la.niub.abcapi.invest.seller.dao.invest.TraderMarkTaskPersonnelMapper" >
  <resultMap id="BaseResultMap" type="la.niub.abcapi.invest.seller.model.TraderMarkTaskPersonnelModel" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="task_id" property="taskId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="weight" property="weight" jdbcType="DECIMAL" />
    <result column="threshold" property="threshold" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, task_id, user_id, weight, threshold, create_time, update_time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from investnew_trader_mark_task_personnel
    where id = #{id,jdbcType=BIGINT}
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from investnew_trader_mark_task_personnel
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insertSelective" parameterType="la.niub.abcapi.invest.seller.model.TraderMarkTaskPersonnelModel" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into investnew_trader_mark_task_personnel
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        task_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="threshold != null" >
        threshold,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskId != null" >
        #{taskId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=DECIMAL},
      </if>
      <if test="threshold != null" >
        #{threshold,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="la.niub.abcapi.invest.seller.model.TraderMarkTaskPersonnelModel" >
    update investnew_trader_mark_task_personnel
    <set >
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=DECIMAL},
      </if>
      <if test="threshold != null" >
        threshold = #{threshold,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="insertBatch">
    insert into investnew_trader_mark_task_personnel
    (
      task_id,
      user_id,
      weight,
      threshold,
      create_time,
      update_time
    )
    values
    <foreach collection="list" item="item" open="" close="" separator=",">
      (
        #{taskId},
        #{item.userId},
        #{item.weight},
        #{item.threshold},
        #{item.createTime},
        #{item.updateTime}
      )
    </foreach>
  </insert>

  <select id="getTaskIdListByUserId" resultType="java.lang.Long" parameterType="string">
    select
      task_id
    from
      investnew_trader_mark_task_personnel
    where
      user_id = #{userId}
  </select>

  <select id="getByUserIdAndTaskId" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from
      investnew_trader_mark_task_personnel
    where
      task_id = #{taskId}
    and user_id = #{userId}
    limit 1
  </select>

  <select id="getByTaskId" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select
      <include refid="Base_Column_List" />
    from
      investnew_trader_mark_task_personnel
    where
      task_id = #{taskId}
  </select>
</mapper>