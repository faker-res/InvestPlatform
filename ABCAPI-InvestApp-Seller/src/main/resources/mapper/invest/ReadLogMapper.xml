<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="la.niub.abcapi.invest.seller.dao.invest.ReadLogMapper" >
  <resultMap id="BaseResultMap" type="la.niub.abcapi.invest.seller.model.ReadLogModel" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="article_type" property="articleType" jdbcType="VARCHAR" />
    <result column="article_id" property="articleId" jdbcType="VARCHAR" />
    <result column="article_author" property="articleAuthor" jdbcType="VARCHAR" />
    <result column="read_time" property="readTime" jdbcType="TIMESTAMP" />
    <result column="create_id" property="createId" jdbcType="VARCHAR" />
    <result column="update_id" property="updateId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, user_id, parent_id, article_type, article_id, article_author, read_time, create_id, 
    update_id, create_time, update_time
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from investnew_read_log
    where id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from investnew_read_log
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insertSelective" parameterType="la.niub.abcapi.invest.seller.model.ReadLogModel" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into investnew_read_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="articleType != null" >
        article_type,
      </if>
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="articleAuthor != null" >
        article_author,
      </if>
      <if test="readTime != null" >
        read_time,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="articleType != null" >
        #{articleType,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="articleAuthor != null" >
        #{articleAuthor,jdbcType=VARCHAR},
      </if>
      <if test="readTime != null" >
        #{readTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="la.niub.abcapi.invest.seller.model.ReadLogModel" >
    update investnew_read_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="articleType != null" >
        article_type = #{articleType,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null" >
        article_id = #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="articleAuthor != null" >
        article_author = #{articleAuthor,jdbcType=VARCHAR},
      </if>
      <if test="readTime != null" >
        read_time = #{readTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectArticleAuthorReadCount" resultType="java.lang.Integer">
    select
      count(*)
    from
      investnew_read_log
    where
      parent_id = #{parentId}
    and read_time between #{startTime} and #{endTime}
    <if test="articleTypeList != null and articleTypeList.size > 0">
      and article_type in
      <foreach collection="articleTypeList" item="articleType" open="(" separator="," close=")">
        #{articleType}
      </foreach>
    </if>
    and (
      article_author = #{analyst}
      or article_author like #{analyst}",%"
      or article_author like "%,"#{analyst}",%"
      or article_author like "%,"#{analyst}
      )
  </select>
</mapper>